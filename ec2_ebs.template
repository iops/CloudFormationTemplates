AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template creates an ec2 instance and attaches a 1 GB ebs vol wiht persistent data'

Parameters:
  Region:
    Default: us-west-2
    Type: String
  VolumeId:
    Default: vol-01ff6c3c791601b14
    Description: List of ebs volumes to mount at boot time
    Type: String
  InstanceType:
    Default: t2.micro
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    Default: dev_acct
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 99.47.161.238/32
    Description: The IP address range that can be used to SSH to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  WebServerEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref WebServer

  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          nginx_install:
            - create_volume
            - install_nginx
        create_volume:
          commands:
            1_pvcreate:
              command: pvcreate /dev/xvdf
            2_vgcreate:
              command: vgcreate vg0 /dev/xvdf
            3_lvcreate:
              command: lvcreate -l 100%FREE -n web vg0
            4_mkfs:
              command: mkfs.ext4 /dev/vg0/web
            5_mkdir:
              command: mkdir -p /var/www/html
            6_fstab:
              command: echo "/dev/mapper/vg0-web /var/www/html ext4 defaults 0 2" >> /etc/fstab
            7_mount:
              command: mount -a
        install_nginx:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: !Sub |
                <html>
                <h1>Cisco SPL</h1>
                <h4>From: Christian Rubio</4>
              group: apache
              owner: apache
              mode: '000600'
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT30M
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdf
          Ebs:
            DeleteOnTermination: false
            VolumeSize: 1
      ImageId:
        Ref: LatestAmiId
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource WebServer --configsets nginx_install --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP access via port 80 locked down to the load balancer + SSH access"
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp: !Ref SSHLocation
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
Outputs:
  PublicIP:
    Description: EC2 public IP
    Value: !GetAtt WebServer.PublicIp
  WebsiteURL:
    Description: Hello World Website
    Value: !Sub "http://${WebServer.PublicDnsName}/index.html"
